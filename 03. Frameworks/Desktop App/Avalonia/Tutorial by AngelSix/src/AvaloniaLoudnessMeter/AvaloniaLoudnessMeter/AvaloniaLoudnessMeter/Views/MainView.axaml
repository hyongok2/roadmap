<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:AvaloniaLoudnessMeter.ViewModels"
			 xmlns:controls="clr-namespace:AvaloniaLoudnessMeter"
			 mc:Ignorable="d" d:DesignWidth="1048" d:DesignHeight="645"
             x:Class="AvaloniaLoudnessMeter.Views.MainView"
             x:DataType="vm:MainViewModel"
             x:CompileBindings="False">
  <Design.DataContext>
    <!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
    <vm:MainViewModel />
  </Design.DataContext>

	<UserControl.Styles>
		<Style Selector="Button.small">
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="Foreground" Value="White"/>
			<!--<Setter Property="FontWeight" Value="Bold"/>-->
			<Setter Property="Background" Value="{DynamicResource BrightBlueBrush}"/>
			<Setter Property="CornerRadius" Value="20"/>
			<Setter Property="Padding" Value="7,2"/>
		</Style>
		<Style Selector="Button.small:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource BrightBlueHoverBrush}"/>
			<Setter Property="TextBlock.Foreground" Value="White"/>
		</Style>
		
	</UserControl.Styles>
	
	<!-- Main Grid -->
	<Grid Name="MainGrid" RowDefinitions="Auto,*,Auto" Background="White">
		
		<!-- Channel Configuration PopUp -->
		<controls:AnimatedPopUp Grid.Row="0" Grid.RowSpan="3"
		                        Name="ChannelConfigurationPopUp"
		                        AnimationTime="0:0:0.3"
		                        UnderlayOpacity="0.2"
		                        Open="{Binding ChannelConfigurationListIsOpen, Mode=TwoWay}">
			<Border Padding="20" Background="White" BorderThickness="1" BorderBrush="#ddd" CornerRadius="5">
				<ItemsControl 
					ItemsSource="{Binding ChannelConfigurations}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Expander>
								<Expander.Header>
									<Label FontSize="14"
									       Foreground="#999"
									       Content="{Binding Key}"/>
								</Expander.Header>
								<ItemsControl ItemsSource="{Binding  }">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<Button
												HorizontalAlignment="Stretch"
												Background="White"
												Content="{Binding Text}"
												Command="{Binding $parent[controls:AnimatedPopUp].((vm:MainViewModel)DataContext).ChannelConfigurationItemPressedCommand, FallbackValue=null}"
												CommandParameter="{Binding}"
												></Button>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
								
							</Expander>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
		</controls:AnimatedPopUp>
		
		<!--Title Bar-->
		<Grid Grid.Row="0" Background="{DynamicResource MediumGrayBrush}" Height="60" ColumnDefinitions="Auto, Auto,*,Auto,Auto">

			<Grid.Styles>
				<Style Selector="Button">
					<Setter Property="Background" Value="Transparent"/>
					<Setter Property="Width" Value="40"/>
				</Style>
				<Style Selector="Button Image">
					<Setter Property="Width" Value="30"/>
				</Style>
				<Style Selector="Button /template/ ContentPresenter">
					<Setter Property="Transitions">
						<Transitions>
							<TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2"/>
						</Transitions>
					</Setter>
				</Style>
				<Style Selector="Button:pointerover /template/ ContentPresenter">
					<Setter Property="Background" Value="Transparent"/>
					<Setter Property="RenderTransform" Value="scale(1.2)"/>
					<Setter Property="Opacity" Value="0.6"/>
				</Style>
			</Grid.Styles>

			<Button Grid.Column="0" >
				<Image Source="{SvgImage /Assets/Images/monitor.svg}"/>
				<!--<Image Source="/Assets/Images/monitor.png"/>-->
			</Button>
			<Button Grid.Column="1" >
				<Image Source="{SvgImage /Assets/Images/lock.svg}"/>
				<!--<Image Source="/Assets/Images/lock.png"/>-->
			</Button>
			<StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2">
				<Label Content="{Binding BoldTitle}" FontSize="24" FontWeight="Black"></Label>
				<Label Content="{Binding RegularTitle}" FontSize="24"></Label>
			</StackPanel>
			<Button Grid.Column="3" >
				<Image Source="{SvgImage /Assets/Images/export.svg}"/>
				<!--<Image Source="/Assets/Images/export.png"/>-->
			</Button>
			<Button Grid.Column="4">
				<Image Source="{SvgImage /Assets/Images/setting.svg}"/>
				<!--<Image Source="/Assets/Images/setting.png"/>-->
			</Button>
		</Grid>

		<!--Main Area-->
		<Grid Grid.Row="1" ColumnDefinitions="Auto,Auto,*" Background="{DynamicResource DarkBlueBrush}">
			<!-- Volume Bar -->
			<Grid Grid.Column="0" Width="150" RowDefinitions="*,Auto,Auto" Margin="0,20">

				<!-- Volume meter gauge-->
				<Grid Grid.Row="0"
					  Margin="10,0"
					  RowDefinitions="3*,3*,3*,9*,5*,4*,9*,9*,9*,6*,Auto"
					  ColumnDefinitions="Auto,*,Auto,Auto">

					<Grid.Styles>
						<Style Selector="Label">
							<Setter Property="Foreground" Value="White"/>
							<Setter Property="FontSize" Value="12"/>
							<Setter Property="HorizontalAlignment" Value="Right"/>
							<Setter Property="Padding" Value="0"/>
						</Style>
					</Grid.Styles>

					<Label Grid.Column="0" Grid.Row="0"> 0 — </Label>
					<Label Grid.Column="0" Grid.Row="1"> -3 — </Label>
					<Label Grid.Column="0" Grid.Row="2"> -6 — </Label>
					<Label Grid.Column="0" Grid.Row="3"> -9 — </Label>
					<Label Grid.Column="0" Grid.Row="4"> -18 — </Label>
					<Label Grid.Column="0" Grid.Row="5"> -23 — </Label>
					<Label Grid.Column="0" Grid.Row="6"> -27 — </Label>
					<Label Grid.Column="0" Grid.Row="7"> -36 — </Label>
					<Label Grid.Column="0" Grid.Row="8"> -45 — </Label>
					<Label Grid.Column="0" Grid.Row="9"> -54 — </Label>
					<Label Grid.Column="0" Grid.Row="10"></Label>

					<!-- arrow-->
					<Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="11" RowDefinitions="23*,37*" Width="20">
						<Rectangle Grid.Row="0" Margin="0,8,0,-8" Fill="#b05c4e" Width="20"></Rectangle>
						<Rectangle Grid.Row="1" Margin="0,8,0,0" Fill="White" Width="20"></Rectangle>
					</Grid>

					<Label Grid.Column="2" Grid.Row="0">—</Label>
					<Label Grid.Column="2" Grid.Row="1">—</Label>
					<Label Grid.Column="2" Grid.Row="2">—</Label>
					<Label Grid.Column="2" Grid.Row="3">—</Label>
					<Label Grid.Column="2" Grid.Row="4">—</Label>
					<Label Grid.Column="2" Grid.Row="5">—</Label>
					<Label Grid.Column="2" Grid.Row="6">—</Label>
					<Label Grid.Column="2" Grid.Row="7">—</Label>
					<Label Grid.Column="2" Grid.Row="8">—</Label>
					<Label Grid.Column="2" Grid.Row="9">—</Label>
					<Label Grid.Column="2" Grid.Row="10"></Label>

					<!-- arrow-->
					<Canvas Grid.Column="3" Grid.Row="0" Grid.RowSpan="11" Width="20">
						<Rectangle Canvas.Top="0" Fill="White" Width="20" Height="20"/>
					</Canvas>

				</Grid>

				<!-- LUFS Label -->
				<Label Grid.Row="1" Foreground="White"
					   FontSize="20" HorizontalAlignment="Center"
					   Margin="0,5">LUFS</Label>

				<!-- Volume bar buttons -->
				<StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center">

					<Button Classes="small" CornerRadius="30" Margin="0,0,20,0" Width="30" Height="30" Padding="4,0,0,0" >
						<Image Width="17" Source="{SvgImage /Assets/Images/fastforward.svg}"/>
						<!--<Image Width="17" Source="/Assets/Images/fastforward.png"/>-->
					</Button>
					<Button Classes="small">INT-LRA</Button>
				</StackPanel>
			</Grid>
			<!-- Loudness Details -->
			<StackPanel Grid.Column="1" Width="170" Margin="0,15,10,10">
				<controls:LargeLableControl LargeText="-21.1 LUFS" SmallText="SHORT TERM"/>
				<controls:LargeLableControl LargeText="-20.7 LUFS" SmallText="INTEGRATED" Background="{DynamicResource LightBlueBrush}"/>
				<controls:LargeLableControl LargeText="9.5 LU" SmallText="LOUDNESS RANGE"/>
				<controls:LargeLableControl LargeText="11.5 LU" SmallText="REALTIME DYNAMICS"/>
				<controls:LargeLableControl LargeText="20.5 LU" SmallText="AVG. DYNAMIC (PLR)" Margin="0,0,0,10"/>

				<controls:LargeLableControl Classes="button" LargeText="-9.8 LUFS" SmallText="MOMENTARY MAX"/>
				<controls:LargeLableControl Classes="button" LargeText="-15.1 LUFS" SmallText="SHORT TERM MAX"/>
				<controls:LargeLableControl Classes="button" LargeText="0.7dB" SmallText="TRUE PEAK MAX" Margin="0,0,0,7"/>

				<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
					<Button Classes="small" Margin="0,0,20,0">AUTO</Button>
					<Button Classes="small" FontSize="20" FontFamily="Arial" Background="{DynamicResource FadedRedBrush}">X</Button>
				</StackPanel>
			</StackPanel>

			<!-- Graph -->
			<Rectangle Grid.Column="2" Fill="Black"></Rectangle>
		</Grid>

		<!--Bottom Bar-->
		<Grid Grid.Row="2" Background="{DynamicResource MediumGrayBrush}" Margin="8" ColumnDefinitions="Auto,Auto,*,Auto,Auto,Auto,Auto,Auto">
			<Button Grid.Column="0" 
			        Name="ChannelConfigurationButton"
			        Content="{Binding ChannelConfigurationButtonText}"
			        Command="{Binding #ChannelConfigurationPopUp.BeginOpen }" 
			        Margin="0,0,8,0"/>
			<Button Grid.Column="1" Content="YouTube"></Button>
			<Button Grid.Column="3" Margin="0,0,8,0">10 SEC</Button>
			<Button Grid.Column="4" Margin="0,0,8,0">CONTINUOUS</Button>
			<Rectangle Grid.Column="5" Fill="Orange" Width="30" Margin="0,0,8,0"></Rectangle>
			<Rectangle Grid.Column="6" Fill="Red" Width="30"></Rectangle>
		</Grid>
	</Grid>
  
</UserControl>
